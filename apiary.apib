FORMAT: 1A
HOST: http://private-6f6d1-dsw.apiary-mock.com

# DSW Server API Docs

## Group Info

### Info Endpoint [/info]

#### Get information about running application [GET]

+ Response 200 (application/json)

        {
            "name": "Data Stewardship Wizard Server",
            "version": "1.0.0",
            "builtAt": "2017/10/25 19:50:20Z"
        }

## Group Token

### Token Endpoint [/tokens]

#### Get token [POST]

- **Possible failures:**
  - HTTP 400
    - Invalid JSON
    - Missing required property

+ Request (application/json)
            
        {
            "email": "john.doe@example.com",
            "password": "password"
        }

+ Response 201 (application/json)

        {
            "token": "jij23ioin23.br34htjdsuis.df789323n23jn2"
        }

## Group Organization

### Organization Current [/organizations/current]

#### Get Current Organization [GET]

- **Possible failures:**
  - HTTP 401

+ Request (application/json)

    + Headers
    
            x-dsp-auth-token: jij23ioin23.br34htjdsuis.df789323n23jn2

+ Response 200 (application/json)

    + Attributes (Organization)
        

#### Change Current Organization [PUT]

- **Possible failures:**
  - HTTP 400
    - Invalid JSON
    - Missing required property
    - GroupId is not in valid format
  - HTTP 401
  - HTTP 403
    - You don’t have ORG_PERM permission

+ Request (application/json)

    + Headers
    
            x-dsp-auth-token: jij23ioin23.br34htjdsuis.df789323n23jn2
    
    + Attributes (Organization)
        

+ Response 200 (application/json)

    + Attributes (array[Organization])

## Group Users

### Users Collection [/users]

#### List All Users [GET]

- **Required permissions:** UM_PERM

- **Possible failures:**
  - HTTP 401
  - HTTP 403
    - You don’t have UM_PERM permission

+ Request

    + Headers
    
            x-dsp-auth-token: jij23ioin23.br34htjdsuis.df789323n23jn2

+ Response 200 (application/json)

    + Attributes (array[User])

#### Registrate/Create user [POST]

- **Required permissions:** UM_PERM (Just for creation, not registration)

- **Possible failures:**
  - HTTP 400
    - Invalid JSON
    - Missing required property
    - User with email 'albert.einstein@example.com' already exists
  - HTTP 401 (Just for creation, not registration)
  - HTTP 403
    - You don’t have UM_PERM permission (Just for creation, not registration)

+ Request (application/json)

    + Headers
    
            x-dsp-auth-token: jij23ioin23.br34htjdsuis.df789323n23jn2

    + Attributes (UserRegistration)
    
+ Response 201 (application/json)

    + Attributes (User)

+ Request (application/json)

    + Attributes (UserCreate)
    
+ Response 201 (application/json)

    + Attributes (User)

    
### User [/users/{userUuid}]

#### Get user [GET]

- **Required permissions:** UM_PERM

- **Possible failures:**
  - HTTP 401
  - HTTP 403
    - You don’t have UM_PERM permission
  - HTTP 404
    - User doesn't exist
    
+ Parameters
    + userUuid: 2j3hj4 (string) ... UUID of the User
    
+ Request

    + Headers
    
            x-dsp-auth-token: jij23ioin23.br34htjdsuis.df789323n23jn2
    
+ Response 200

    + Attributes (User)

#### Modify user [PUT]

- **Required permissions:** UM_PERM

- **Possible failures:**
  - HTTP 400
    - Invalid JSON
    - Missing required property
    - User with email 'albert.einstein@example.com' already exists
  - HTTP 401
  - HTTP 403
    - You don’t have UM_PERM permission
  - HTTP 404
    - User doesn't exist
    
+ Parameters
    + userUuid: 2j3hj4 (string) ... UUID of the User
    
+ Request (application/json)

    + Headers
    
            x-dsp-auth-token: jij23ioin23.br34htjdsuis.df789323n23jn2

    + Attributes (UserChange)    
    
+ Response 200

    + Attributes (User)

#### Activate user [PUT /users/{userUuid}/state]

- **Required permissions:** UM_PERM

- **Possible failures:**
  - HTTP 401
  - HTTP 403
    - You don’t have UM_PERM permission
  - HTTP 404
    - User doesn't exist

+ Parameters
    + userUuid: 2j3hj4 (string) ... UUID of the User
    
+ Request (application/json)

    + Attributes (UserChange)    
    
+ Response 200

    + Attributes (User)

#### Change password [PUT /users/{userUuid}/password]

- **Required permissions:** UM_PERM

- **Possible failures:**
  - HTTP 400
    - Invalid JSON
    - Missing required property
    - You have to log in as Administrator or you have to provide a hash in query param
  - HTTP 401
  - HTTP 403
    - You don’t have UM_PERM permission
  - HTTP 404
    - User doesn't exist
    
+ Parameters
    + userUuid: 2j3hj4 (string) ... UUID of the User
    
+ Request (application/json)

    + Headers
    
            x-dsp-auth-token: jij23ioin23.br34htjdsuis.df789323n23jn2

    + Attributes (UserPasswordChange)    
    
+ Response 204

#### Reset forgotten password [PUT /users/{userUuid}/password{?hash}]

- **Possible failures:**
  - HTTP 400
    - Invalid JSON
    - Missing required property
    - You have to log in as Administrator or you have to provide a hash in query param
    - Hash query param has to be provided
  - HTTP 404
    - User doesn't exist
    
+ Parameters
    + userUuid: 2j3hj4 (string) ... UUID of the User
    + hash: h53j1jb (string) ... Random generated hash, provided in email
    
+ Request (application/json)

    + Attributes (UserPasswordChange)    
    
+ Response 204

#### Delete user [DELETE]

- **Required permissions:** UM_PERM

- **Possible failures:**
  - HTTP 401
  - HTTP 403
    - You don’t have UM_PERM permission
  - HTTP 404
    - User doesn't exist
    
+ Parameters
    + userUuid: 2j3hj4 (string) ... UUID of the User

+ Request

    + Headers
    
            x-dsp-auth-token: jij23ioin23.br34htjdsuis.df789323n23jn2

+ Response 204

### User Current [/users/current]

#### Modify profile [PUT]

- **Possible failures:**
  - HTTP 400
    - Invalid JSON
    - Missing required property
    - User with email 'albert.einstein@example.com' already exists
  - HTTP 401
    
+ Request (application/json)

    + Headers
    
            x-dsp-auth-token: jij23ioin23.br34htjdsuis.df789323n23jn2

    + Attributes (UserProfileChange)    
    
+ Response 200

    + Attributes (User)

#### Change password for current user [PUT /users/current/password]

- **Required permissions:** UM_PERM

- **Possible failures:**
  - HTTP 400
    - Invalid JSON
    - Missing required property
  - HTTP 401

+ Request (application/json)

    + Headers
    
            x-dsp-auth-token: jij23ioin23.br34htjdsuis.df789323n23jn2

    + Attributes (UserPasswordChange)    
    
+ Response 204

        
## Group Questionnaires

### Questionnaires Collection [/questionnaires]

#### List All Questionnaires [GET]

- **Required permissions:** QTN_PERM

+ Response 200 (application/json)

        [
            {
                "uuid": "521ba33b-10cf-4829-bbe1-90ea06a68f4f",
                "name": "My First Wizard",
                "package": {
                    "id": "elixir.nl:core-nl:2.0.0",
                    "name": "Elixir Netherlands",
                    "groupId": "elixir.nl",
                    "artifactId": "core-nl",
                    "version": "2.0.0",
                    "description": "Updated experts",
                    "parentPackageId": "elixir:core:2.0.0"
                }
            }
        ]

#### Create a New Questionnaire [POST]

- **Required permissions:** QTN_PERM

+ Request (application/json)

        {
            "name": "My First Wizard",
            "packageId": "elixir.nl:core-nl:2.0.0"
        }

+ Response 201 (application/json)

        {
            "uuid": "521ba33b-10cf-4829-bbe1-90ea06a68f4f",
            "name": "My First Wizard",
            "package": {
                "id": "elixir.nl:core-nl:2.0.0",
                "name": "Elixir Netherlands",
                "groupId": "elixir.nl",
                "artifactId": "core-nl",
                "version": "2.0.0",
                "description": "Updated experts",
                "parentPackageId": "elixir:core:2.0.0"
            }
        }

### Questionnaire Public [/questionnaires/public]

#### Get public example ofquestionnaire [GET]

+ Response 200 (application/json)

        {
            "uuid": "0509da0e-e79f-4d56-845e-2468f8b33f09",
            "name": "Public Questionnaire",
            "package": {
                "id": "elixir.nl:core-nl:2.0.0",
                "name": "Elixir Netherlands",
                "groupId": "elixir.nl",
                "artifactId": "core-nl",
                "version": "2.0.0",
                "description": "Updated experts",
                "parentPackageId": "elixir:core:2.0.0"
            },
            "knowledgeModel": {
                "uuid": "ff672529-e837-4201-b7b1-7ada557d9725",
                "name": "My Knowledge Model",
                "chapters": [
                    {
                        "text": "Looong long text",
                        "uuid": "e3c4b314-919b-418d-bb85-a07c97433427",
                        "questions": [],
                        "title": "Design of experiment"
                    },
                    {
                        "text": "Some long text",
                        "uuid": "ca46cd40-3999-4f0d-a8ba-15d57682dfeb",
                        "questions": [],
                        "title": "Testing"
                    }
                ]
            },
            "replies": []
        }
        
        
### Questionnaire [/questionnaires/{questionnaireUuid}]

#### Get detail of Questionnaire [GET]

- **Required permissions:** QTN_PERM

+ Parameters
    + questionnaireUuid (string) ... UUID of the questionnaire

+ Response 200 (application/json)

        {
            "uuid": "521ba33b-10cf-4829-bbe1-90ea06a68f4f",
            "name": "My First Questionnaire",
            "package": {
                "id": "elixir.nl:core-nl:2.0.0",
                "name": "Elixir Netherlands",
                "groupId": "elixir.nl",
                "artifactId": "core-nl",
                "version": "2.0.0",
                "description": "Updated experts",
                "parentPackageId": "elixir:core:2.0.0"
            },
            "knowledgeModel": {
                "uuid": "ff672529-e837-4201-b7b1-7ada557d9725",
                "name": "My Knowledge Model",
                "chapters": [
                    {
                        "text": "Looong long text",
                        "uuid": "e3c4b314-919b-418d-bb85-a07c97433427",
                        "questions": [],
                        "title": "Design of experiment"
                    },
                    {
                        "text": "Some long text",
                        "uuid": "ca46cd40-3999-4f0d-a8ba-15d57682dfeb",
                        "questions": [],
                        "title": "Testing"
                    }
                ]
            },
            "replies": [
                { "path": "chapter1.question1.answer1", "value": "foo"},
                { "path": "chapter1.question1.answer2", "value": "bar"}
            ]
        }
        

#### Update replies of Questionnaire [PUT /questionnaires/{questionnaireUuid}/replies]

- **Required permissions:** QTN_PERM

- **Possible failures:**
  - HTTP 401
  - HTTP 403
  - HTTP 404
  
+ Parameters
    + questionnaireUuid (string) ... UUID of the questionnaire
    
+ Request (application/json)

    + Attributes (QuestionnaireReply)

+ Response 200 (application/json)

    + Attributes (QuestionnaireReply)


#### Get Questionnaire Report [PUT /questionnaires/{questionnaireUuid}/report]

- **Required permissions:** QTN_PERM

+ Parameters
    + questionnaireUuid (string) ... UUID of the questionnaire

+ Response 200 (application/json)

    + Attributes (Report)


#### Export Questionnaire [GET /questionnaires/{questionnaireUuid}/dmp{?format}]
    
+ Parameters
    + questionnaireUuid (string) ... UUID of the questionnaire
    + format: pdf (enum[string]) ... Desired document format
      + Members
            + `json`
            + `html`
            + `latex`
            + `markdown`
            + `docx`
            + `odt`
            + `pdf`
            + `rtf`
            + `rst`
            + `asciidoc`
            + `dokuwiki`
            + `mediawiki`
            + `epub2`
            + `epub3`

+ Response 200 (application/octet-stream)

## Group Book References

### Book Reference [/book-references/{brShortUuid}]

#### Get detail of Book Reference [GET]

- **Possible failures:**
  - HTTP 404
  
+ Parameters
    + brShortUuid (string) ... Short uuid of book reference

+ Response 200 (application/json)

    + Attributes (BookReference)


## Group Feedbacks

### Feedbacks Collection [/feedbacks]

#### List All Feedbacks [GET]

+ Response 200 (application/json)

    + Attributes (array[Feedback])

#### Create a New Feedback [POST]

- **Possible failures:**
  - HTTP 400
    - Invalid JSON
    - Missing required property

+ Request (application/json)

    + Attributes (FeedbackCreate)

+ Response 201 (application/json)

    + Attributes (Feedback)

### Feedback Synchronization [/feedbacks/synchronization]

#### Synchronization local feedbacks in database with current state on GitHub  [GET]

+ Response 204


### Feedback [/feedbacks/{feedbackUuid}]

- **Possible failures:**
  - HTTP 404

#### Get detail of Feedback [GET]

+ Parameters
    + feedbackUuid (string) ... UUID of the feedback

+ Response 200 (application/json)

    + Attributes (Feedback)
        

## Group Metrics

### Metrics Collection [/metrics]

#### List All Metrics [GET]


- **Possible failures:**
  - HTTP 401

+ Request (application/json)

    + Headers
    
            x-dsp-auth-token: jij23ioin23.br34htjdsuis.df789323n23jn2

+ Response 200 (application/json)

    + Attributes (array[Metric])
    

## Group Levels

### Levels Collection [/levels]

#### List All Levels [GET]


- **Possible failures:**
  - HTTP 401

+ Request (application/json)

    + Headers
    
            x-dsp-auth-token: jij23ioin23.br34htjdsuis.df789323n23jn2

+ Response 200 (application/json)

    + Attributes (array[Level])
    

# Data Structures

## Organization (object)

+ uuid: `0e795186-9733-4c60-9f03-58cea76590e1` (string)
+ name: Elixir Amsterdam (string)
+ groupId: elixir.nl.amsterdam (string)

## User (object)

+ uuid: `d977c686-2e0e-46fe-b552-bb379916df89` (string)
+ name: Albert (string)
+ surname: Einstein (string)
+ email: albert.einstein@example.com (string)
+ role: ADMIN (string)
+ permissions: [UM_PERM, PM_PERM] (array[string])
+ isActive: true (boolean)
+ createdAt: `2018-06-27T16:24:12Z` (string)
+ updatedAt: `2018-06-27T16:24:12Z` (string)

## UserRegistration (object)

+ name: Albert (string)
+ surname: Einstein (string)
+ email: albert.einstein@example.com (string)
+ password: aijio2jiasjdias (string)

## UserCreate (object)

+ name: Albert (string)
+ surname: Einstein (string)
+ email: albert.einstein@example.com (string)
+ role: ADMIN (string)
+ password: aijio2jiasjdias (string)

## UserChange (object)

+ uuid: `d977c686-2e0e-46fe-b552-bb379916df89` (string)
+ name: Albert (string)
+ surname: Einstein (string)
+ email: albert.einstein@example.com (string)
+ role: ADMIN (string)
+ isActive: true (boolean)

## UserProfileChange (object)

+ uuid: `d977c686-2e0e-46fe-b552-bb379916df89` (string)
+ name: Albert (string)
+ surname: Einstein (string)
+ email: albert.einstein@example.com (string)

## UserPasswordChange (object)

+ password: aijio2jiasjdias (string)

## QuestionnaireReply (object)

+ path: i1j3io131j23i1j.i1j3io131j23i1j.i1j3io131j23i1j.0.itemName (string)
+ value: MongoDB (string)

## BookReference (object)

+ shortUuid: bvq (string)
+ content: <div>Some HTML content</div> (string)

## Feedback (object)

+ uuid: `495bf77b-d0c3-44ee-be7c-e0eccc092186` (string)
+ issueId: 123 (number)
+ questionUuid: `59bd7bd3-07d7-4512-95f6-f19f69786527` (string)
+ packageId: elixir:root:1.0.0 (string)
+ title: Provide more descriptive content (string)
+ content: I'm not very satisfied with a description of this question (string)
+ createdAt: `2018-06-27T16:24:12Z` (string)
+ updatedAt: `2018-06-27T16:24:12Z` (string)

## FeedbackCreate (object)

+ questionUuid: `59bd7bd3-07d7-4512-95f6-f19f69786527` (string)
+ packageId: elixir:root:1.0.0 (string)
+ title: Provide more descriptive content (string)
+ content: I'm not very satisfied with a description of this question (string)

## Metric (object)

+ uuid: `db667ca6-bb88-4953-8417-0ff6298f97f1` (string)
+ title: Findability (string)
+ abbreviation: F (string)
+ description: ... (string)
+ references: [] (array[Reference])
+ createdAt: `2018-06-27T16:24:12Z` (string)
+ updatedAt: `2018-06-27T16:24:12Z` (string)

## Reference (object)

+ uuid: `e674fb40-e2d3-4ac5-b935-f32e9925d64dn ` (string)
+ referenceType: ResourcePageReference (string)
+ shortUuid: abc (string)

## Report (object)

+ uuid: `7f822953-f30d-4020-a827-595819f007f1` (string)
+ chapterReports (array[ChapterReport])
+ createdAt: `2018-06-27T16:24:12Z` (string)
+ updatedAt: `2018-06-27T16:24:12Z` (string)

## ChapterReport (object)

+ chapterUuid: `ebcbab63-0527-4349-8cbd-4dd337b1b000` (string)
+ metrics (array[ReportIndication])
+ indications (array[ReportMetric])

## ReportIndication (object)

+ indicationType: AnsweredIndication (string)
+ answeredQuestions: 2 (number)
+ unansweredQuestions: 3 (number)

## ReportMetric (object)

+ metricUuid: `4b3d80bc-f52d-4d63-8743-2300ff6e3917` (string)
+ measure: 0 (number)

## Level (object)

+ number: 1 (number)
+ title: Before Submitting the Proposal (string)
+ description: Some description (string)
+ createdAt: `2018-06-27T16:24:12Z` (string)
+ updatedAt: `2018-06-27T16:24:12Z` (string)